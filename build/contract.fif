"Asm.fif" include
// automatically generated from `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\error_codes.func` `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\math.func` `C:\Users\Tigr\AppData\Local\toncli\toncli\func-libs\stdlib.func` `D:\TON_FunC\timer\func\timer.fc` 
PROGRAM{
  DECLPROC power
  DECLPROC sqrt
  DECLPROC avg
  DECLPROC exp
  DECLPROC log2
  DECLPROC send_schedule_loop_msg
  DECLPROC continue_parsing
  DECLPROC process_schedule
  DECLPROC put_scheduled
  DECLPROC recv_internal
  DECLPROC recv_external
  power PROCREF:<{
    //  x exponent
    OVER	//  x exponent x
    0 EQINT	//  x exponent _3
    IFJMP:<{	//  x exponent
      2DROP	// 
      0 PUSHINT	//  _4=0
    }>	//  x exponent
    DUP	//  x exponent exponent
    0 EQINT	//  x exponent _6
    IFJMP:<{	//  x exponent
      2DROP	// 
      1 PUSHINT	//  _7=1
    }>	//  x exponent
    OVER	//  x counter result
    WHILE:<{
      OVER	//  x counter result counter
      1 GTINT	//  x counter result _11
    }>DO<{	//  x counter result
      s2 PUSH	//  x counter result x
      MUL	//  x counter result
      SWAP	//  x result counter
      DEC	//  x result counter
      SWAP	//  x counter result
    }>	//  x counter result
    2 1 BLKDROP2	//  result
  }>
  sqrt PROCREF:<{
    //  x
    DUP	//  x x
    0 EQINT	//  x _2
    IFJMP:<{	//  x
      DROP	// 
      0 PUSHINT	//  _3=0
    }>	//  x
    DUP	//  x x
    4 LESSINT	//  x _5
    IFJMP:<{	//  x
      DROP	// 
      1 PUSHINT	//  _6=1
    }>	//  x
    DUP	//  x x
    INC	//  x _9
    1 RSHIFT#	//  x z
    OVER	//  x z y
    WHILE:<{
      2DUP	//  x z y z y
      LESS	//  x z y _13
    }>DO<{	//  x z y
      DROP	//  x z
      s0 s1 s0 PUSH3	//  x z y x z
      DIV	//  x z y _14
      ROT	//  x y _14 z
      ADD	//  x y _15
      1 RSHIFT#	//  x y z
      SWAP	//  x z y
    }>	//  x z y
    2 1 BLKDROP2	//  y
  }>
  avg PROCREF:<{
    //  x y
    ADD	//  _2
    1 RSHIFT#	//  _4
  }>
  exp PROCREF:<{
    //  x
    DUP	//  x x
    -1 GTINT	//  x _2
    IF:<{	//  x
      POW2	//  _3
    }>ELSE<{	//  x
      1 PUSHINT	//  x _6=1
      SWAP	//  _6=1 x
      NEGATE	//  _6=1 _8
      RSHIFT	//  _3
    }>
  }>
  log2 PROCREF:<{
    //  x
    0 PUSHINT	//  x n=0
    7 PUSHPOW2	//  x n=0 _3=128
    exp INLINECALLDICT	//  x n=0 _4
    s2 s(-1) PUXC	//  x n=0 x _4
    GEQ	//  x n=0 _5
    IF:<{	//  x n=0
      DROP	//  x
      128 RSHIFT#	//  x
      7 PUSHPOW2	//  x n
    }>	//  x n
    64 PUSHINT	//  x n _10=64
    exp INLINECALLDICT	//  x n _11
    s2 s(-1) PUXC	//  x n x _11
    GEQ	//  x n _12
    IF:<{	//  x n
      SWAP	//  n x
      64 RSHIFT#	//  n x
      SWAP	//  x n
      64 ADDCONST	//  x n
    }>	//  x n
    32 PUSHINT	//  x n _17=32
    exp INLINECALLDICT	//  x n _18
    s2 s(-1) PUXC	//  x n x _18
    GEQ	//  x n _19
    IF:<{	//  x n
      SWAP	//  n x
      32 RSHIFT#	//  n x
      SWAP	//  x n
      32 ADDCONST	//  x n
    }>	//  x n
    16 PUSHINT	//  x n _24=16
    exp INLINECALLDICT	//  x n _25
    s2 s(-1) PUXC	//  x n x _25
    GEQ	//  x n _26
    IF:<{	//  x n
      SWAP	//  n x
      16 RSHIFT#	//  n x
      SWAP	//  x n
      16 ADDCONST	//  x n
    }>	//  x n
    8 PUSHINT	//  x n _31=8
    exp INLINECALLDICT	//  x n _32
    s2 s(-1) PUXC	//  x n x _32
    GEQ	//  x n _33
    IF:<{	//  x n
      SWAP	//  n x
      8 RSHIFT#	//  n x
      SWAP	//  x n
      8 ADDCONST	//  x n
    }>	//  x n
    4 PUSHINT	//  x n _38=4
    exp INLINECALLDICT	//  x n _39
    s2 s(-1) PUXC	//  x n x _39
    GEQ	//  x n _40
    IF:<{	//  x n
      SWAP	//  n x
      4 RSHIFT#	//  n x
      SWAP	//  x n
      4 ADDCONST	//  x n
    }>	//  x n
    2 PUSHINT	//  x n _45=2
    exp INLINECALLDICT	//  x n _46
    s2 s(-1) PUXC	//  x n x _46
    GEQ	//  x n _47
    IF:<{	//  x n
      SWAP	//  n x
      2 RSHIFT#	//  n x
      SWAP	//  x n
      2 ADDCONST	//  x n
    }>	//  x n
    1 PUSHINT	//  x n _52=1
    exp INLINECALLDICT	//  x n _53
    s1 s2 XCHG	//  n x _53
    GEQ	//  n _54
    IF:<{	//  n
      INC	//  n
    }>	//  n
  }>
  send_schedule_loop_msg PROCREF:<{
    // 
    0 PUSHINT	//  _0=0
    24 PUSHINT	//  _0=0 _1=24
    NEWC	//  _0=0 _1=24 _2
    6 STU	//  _0=0 _4
    b{100} x{FF} |+ x{0310202200000000000000000000000000000000000000000000000000000001} |+ PUSHSLICE	//  _0=0 _4 _5
    STSLICER	//  _0=0 _6
    500000000 PUSHINT	//  _0=0 _6 _7=500000000
    STVARUINT16	//  _0=0 _8
    107 STU	//  _22
    ENDC	//  _23
    0 PUSHINT	//  _23 _24=0
    SENDRAWMSG
  }>
  continue_parsing PROCREF:<{
    //  success scheduled_at current_time
    s0 s2 XCHG	//  current_time scheduled_at success
    NOT	//  current_time scheduled_at _3
    IFJMP:<{	//  current_time scheduled_at
      2DROP	// 
      0 PUSHINT	//  _4=0
    }>	//  current_time scheduled_at
    GEQ	//  _5
  }>
  process_schedule PROCREF:<{
    // 
    c4 PUSH	//  _2
    CTOS	//  _3
    LDDICT	//  _62 _61
    DROP	//  scheduled
    NOW	//  scheduled current_time
    OVER
    32 PUSHINT	//  scheduled current_time scheduled _10=32
    DICTUMIN
    NULLSWAPIFNOT2	//  scheduled current_time scheduled_msg scheduled_at success
    WHILE:<{
      s1 s3 PUSH2	//  scheduled current_time scheduled_msg scheduled_at success scheduled_at current_time
      continue_parsing INLINECALLDICT	//  scheduled current_time scheduled_msg scheduled_at _12
    }>DO<{	//  scheduled current_time scheduled_msg scheduled_at
      SWAP	//  scheduled current_time scheduled_at scheduled_msg
      LDREF	//  scheduled current_time scheduled_at addr scheduled_msg
      LDREF	//  scheduled current_time scheduled_at addr body scheduled_msg
      1 PUSHINT	//  scheduled current_time scheduled_at addr body scheduled_msg _19=1
      24 PUSHINT	//  scheduled current_time scheduled_at addr body scheduled_msg _19=1 _20=24
      NEWC	//  scheduled current_time scheduled_at addr body scheduled_msg _19=1 _20=24 _21
      6 STU	//  scheduled current_time scheduled_at addr body scheduled_msg _19=1 _23
      s0 s4 XCHG	//  scheduled current_time scheduled_at _23 body scheduled_msg _19=1 addr
      CTOS	//  scheduled current_time scheduled_at _23 body scheduled_msg _19=1 _24
      s1 s4 XCHG	//  scheduled current_time scheduled_at _19=1 body scheduled_msg _23 _24
      STSLICER	//  scheduled current_time scheduled_at _19=1 body scheduled_msg _25
      SWAP	//  scheduled current_time scheduled_at _19=1 body _25 scheduled_msg
      64 LDU	//  scheduled current_time scheduled_at _19=1 body _25 _71 _70
      DROP	//  scheduled current_time scheduled_at _19=1 body _25 _26
      STVARUINT16	//  scheduled current_time scheduled_at _19=1 body _29
      s1 s2 XCHG	//  scheduled current_time scheduled_at body _19=1 _29
      107 STU	//  scheduled current_time scheduled_at body _43
      STREF	//  scheduled current_time scheduled_at _44
      ENDC	//  scheduled current_time scheduled_at _45
      0 PUSHINT	//  scheduled current_time scheduled_at _45 _46=0
      SENDRAWMSG
      ROT
      32 PUSHINT	//  current_time scheduled_at scheduled _50=32
      DICTUDEL	//  current_time _72 _73
      DROP	//  current_time scheduled
      DUP
      32 PUSHINT	//  current_time scheduled scheduled _52=32
      DICTUMIN
      NULLSWAPIFNOT2	//  current_time scheduled scheduled_msg scheduled_at success
      s3 s4 XCHG	//  scheduled current_time scheduled_msg scheduled_at success
    }>	//  scheduled current_time scheduled_msg scheduled_at
    3 BLKDROP	//  scheduled
    DUP
    NEWC	//  scheduled scheduled _54
    STDICT	//  scheduled _55
    ENDC	//  scheduled _56
    c4 POP
    DICTEMPTY	//  _58
    NOT	//  _59
    IF:<{	// 
      send_schedule_loop_msg INLINECALLDICT
    }>	// 
  }>
  put_scheduled PROCREF:<{
    //  schedule_at forward_nton in_msg
    16 PUSHINT	//  schedule_at forward_nton in_msg _3=16
    RAND	//  schedule_at forward_nton in_msg _4
    s1 s3 XCHG	//  in_msg forward_nton schedule_at _4
    ADD	//  in_msg forward_nton schedule_at
    c4 PUSH	//  in_msg forward_nton schedule_at _8
    CTOS	//  in_msg forward_nton schedule_at _9
    LDDICT	//  in_msg forward_nton schedule_at _39 _38
    DROP	//  in_msg forward_nton schedule_at scheduled
    DUP	//  in_msg forward_nton schedule_at scheduled scheduled
    DICTEMPTY	//  in_msg forward_nton schedule_at scheduled _11
    NOT	//  in_msg forward_nton schedule_at scheduled _12
    IF:<{	//  in_msg forward_nton schedule_at scheduled
      send_schedule_loop_msg INLINECALLDICT
    }>	//  in_msg forward_nton schedule_at scheduled
    2DUP
    32 PUSHINT	//  in_msg forward_nton schedule_at scheduled schedule_at scheduled _16=32
    DICTUGET
    NULLSWAPIFNOT	//  in_msg forward_nton schedule_at scheduled _40 _41
    NIP	//  in_msg forward_nton schedule_at scheduled old_schedule_exist
    102 THROWIF
    s0 s3 XCHG	//  scheduled forward_nton schedule_at in_msg
    LDREF	//  scheduled forward_nton schedule_at schedule_to in_msg
    LDREF	//  scheduled forward_nton schedule_at schedule_to _45 _44
    DROP	//  scheduled forward_nton schedule_at schedule_to body
    s0 s3 XCHG
    NEWC	//  scheduled body schedule_at schedule_to forward_nton _27
    64 STU	//  scheduled body schedule_at schedule_to _29
    STREF	//  scheduled body schedule_at _30
    s1 s2 XCHG	//  scheduled schedule_at body _30
    STREF	//  scheduled schedule_at _31
    s0 s2 XCHG
    32 PUSHINT	//  _31 schedule_at scheduled _32=32
    DICTUSETB	//  scheduled
    NEWC	//  scheduled _34
    STDICT	//  _35
    ENDC	//  _36
    c4 POP
  }>
  recv_internal PROC:<{
    //  coins in_msg_full in_msg
    SWAP	//  coins in_msg in_msg_full
    CTOS	//  coins in_msg in_msg_full
    4 LDU	//  coins in_msg bounced in_msg_full
    LDMSGADDR	//  coins in_msg bounced _127 _126
    DROP	//  coins in_msg bounced src
    HASHSU	//  coins in_msg bounced src_hash
    b{100} x{FF} |+ x{0310202200000000000000000000000000000000000000000000000000000001} |+ PUSHSLICE	//  coins in_msg bounced src_hash _14
    HASHSU	//  coins in_msg bounced src_hash _15
    s1 s(-1) PUXC	//  coins in_msg bounced src_hash src_hash _15
    EQUAL	//  coins in_msg bounced src_hash _16
    IFJMP:<{	//  coins in_msg bounced src_hash
      4 BLKDROP	// 
      process_schedule INLINECALLDICT
    }>	//  coins in_msg bounced src_hash
    SWAP
    1 PUSHINT	//  coins in_msg src_hash bounced _18=1
    AND	//  coins in_msg src_hash _19
    IFJMP:<{	//  coins in_msg src_hash
      3 BLKDROP	// 
    }>	//  coins in_msg src_hash
    OVER	//  coins in_msg src_hash in_msg
    SBITS	//  coins in_msg src_hash _20
    32 LESSINT	//  coins in_msg src_hash _22
    IFJMP:<{	//  coins in_msg src_hash
      3 BLKDROP	// 
    }>	//  coins in_msg src_hash
    b{100} x{00} |+ x{15be3c3171911009bbcc473d07d8fc2bcc0c7192fed2237719da256e07fa7948} |+ PUSHSLICE	//  coins in_msg src_hash _23
    HASHSU	//  coins in_msg src_hash _24
    EQUAL	//  coins in_msg _25
    IFJMP:<{	//  coins in_msg
      NIP	//  in_msg
      64 LDU	//  _129 _128
      DROP	//  request_nton
      DUP	//  request_nton request_nton
      1 EQINT	//  request_nton _31
      IFJMP:<{	//  request_nton
        DROP	// 
        send_schedule_loop_msg INLINECALLDICT
      }>	//  request_nton
      BALANCE	//  request_nton _35
      UNPAIR	//  request_nton _130 _131
      DROP	//  request_nton balance
      32 PUSHPOW2DEC	//  request_nton balance _38=4294967295
      NOW	//  request_nton balance _38=4294967295 _39
      SUB	//  request_nton balance time_to_unix_epoch_end
      s1 s2 XCPU	//  request_nton time_to_unix_epoch_end balance request_nton
      SUB	//  request_nton time_to_unix_epoch_end _42
      3611111 PUSHINT
      ROT	//  request_nton _42 _43=3611111 time_to_unix_epoch_end
      MUL	//  request_nton _42 _44
      LESS	//  request_nton _45
      105 THROWIF
      0 PUSHINT	//  request_nton _47=0
      24 PUSHINT	//  request_nton _47=0 _48=24
      NEWC	//  request_nton _47=0 _48=24 _49
      6 STU	//  request_nton _47=0 _51
      b{100} x{00} |+ x{15be3c3171911009bbcc473d07d8fc2bcc0c7192fed2237719da256e07fa7948} |+ PUSHSLICE	//  request_nton _47=0 _51 _52
      STSLICER	//  request_nton _47=0 _53
      ROT	//  _47=0 _53 request_nton
      STVARUINT16	//  _47=0 _54
      107 STU	//  _68
      ENDC	//  _69
      0 PUSHINT	//  _69 _70=0
      SENDRAWMSG
    }>	//  coins in_msg
    64 LDU	//  coins forward_nton in_msg
    OVER
    10000000 PUSHINT	//  coins forward_nton in_msg forward_nton _77=10000000
    LESS	//  coins forward_nton in_msg _78
    100 THROWIF
    32 LDU	//  coins forward_nton schedule_at in_msg
    1805556 PUSHINT	//  coins forward_nton schedule_at in_msg _85=1805556
    0 PUSHINT	//  coins forward_nton schedule_at in_msg _85=1805556 _86=0
    s3 PUSH
    NOW	//  coins forward_nton schedule_at in_msg _85=1805556 _86=0 schedule_at _87
    SUB	//  coins forward_nton schedule_at in_msg _85=1805556 _86=0 _88
    MAX	//  coins forward_nton schedule_at in_msg _85=1805556 _89
    MUL	//  coins forward_nton schedule_at in_msg timer_work_cost
    s3 PUSH	//  coins forward_nton schedule_at in_msg timer_work_cost forward_nton
    ADD	//  coins forward_nton schedule_at in_msg _92
    400000000 PUSHINT	//  coins forward_nton schedule_at in_msg _92 _93=400000000
    ADD	//  coins forward_nton schedule_at in_msg _94
    s1 s4 XCHG	//  in_msg forward_nton schedule_at coins _94
    LESS	//  in_msg forward_nton schedule_at _95
    101 THROWIF
    s0 s2 XCHG	//  schedule_at forward_nton in_msg
    put_scheduled INLINECALLDICT
    0 PUSHINT	//  _98=0
    24 PUSHINT	//  _98=0 _99=24
    NEWC	//  _98=0 _99=24 _100
    6 STU	//  _98=0 _102
    b{100} x{00} |+ x{15be3c3171911009bbcc473d07d8fc2bcc0c7192fed2237719da256e07fa7948} |+ PUSHSLICE	//  _98=0 _102 _103
    STSLICER	//  _98=0 _104
    200000000 PUSHINT	//  _98=0 _104 _105=200000000
    STVARUINT16	//  _98=0 _106
    107 STU	//  _120
    ENDC	//  _121
    1 PUSHINT	//  _121 _122=1
    SENDRAWMSG
  }>
  recv_external PROC:<{
    // 
    BALANCE	//  _2
    UNPAIR	//  _7 _8
    DROP	//  balance
    100000000 PUSHINT	//  balance _4=100000000
    LESS	//  _5
    IF:<{	// 
      ACCEPT
    }>	// 
  }>
}END>c
boc>B "build/boc/contract.boc" B>file
